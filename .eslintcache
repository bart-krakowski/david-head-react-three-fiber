[{"/Users/bart/Codes/three-fiber/src/index.tsx":"1","/Users/bart/Codes/three-fiber/src/theme/index.ts":"2","/Users/bart/Codes/three-fiber/src/App.tsx":"3","/Users/bart/Codes/three-fiber/src/theme/GlobalNormalizeStyle.ts":"4","/Users/bart/Codes/three-fiber/src/components/Head/Head.tsx":"5","/Users/bart/Codes/three-fiber/src/components/Box/Box.tsx":"6","/Users/bart/Codes/three-fiber/src/theme/Theme.tsx":"7","/Users/bart/Codes/three-fiber/src/components/Head/index.ts":"8","/Users/bart/Codes/three-fiber/src/theme/createBreakpoints.ts":"9","/Users/bart/Codes/three-fiber/src/components/Lights/index.ts":"10","/Users/bart/Codes/three-fiber/src/components/Lights/Lights.tsx":"11","/Users/bart/Codes/three-fiber/src/components/Head/CustomMaterial.ts":"12"},{"size":197,"mtime":1610215188205,"results":"13","hashOfConfig":"14"},{"size":33,"mtime":1606337924619,"results":"15","hashOfConfig":"14"},{"size":1113,"mtime":1608743429948,"results":"16","hashOfConfig":"14"},{"size":2979,"mtime":1606339479593,"results":"17","hashOfConfig":"14"},{"size":2898,"mtime":1610286290308,"results":"18","hashOfConfig":"14"},{"size":792,"mtime":1606339671723,"results":"19","hashOfConfig":"20"},{"size":1998,"mtime":1606337932805,"results":"21","hashOfConfig":"14"},{"size":33,"mtime":1606341122523,"results":"22","hashOfConfig":"14"},{"size":2032,"mtime":1603374983792,"results":"23","hashOfConfig":"14"},{"size":35,"mtime":1608481853618,"results":"24","hashOfConfig":"14"},{"size":1312,"mtime":1610288258719,"results":"25","hashOfConfig":"14"},{"size":4571,"mtime":1609344491992,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1rpbgol",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o0c1y4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/bart/Codes/three-fiber/src/index.tsx",[],["54","55","56"],"/Users/bart/Codes/three-fiber/src/theme/index.ts",[],"/Users/bart/Codes/three-fiber/src/App.tsx",[],"/Users/bart/Codes/three-fiber/src/theme/GlobalNormalizeStyle.ts",[],"/Users/bart/Codes/three-fiber/src/components/Head/Head.tsx",["57","58","59"],"import React, { createRef, FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { useLoader, useThree } from 'react-three-fiber';\nimport { Mesh, MeshStandardMaterial, Group, Material } from 'three'\nimport { gsap } from 'gsap'\n\nimport './CustomMaterial'\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    Head: {\n      children: Array<Mesh>\n    }\n  }\n  materials: {\n    base: MeshStandardMaterial\n    inner: MeshStandardMaterial\n  }\n}\n\nconst Head: FC = () => {\n  const modelEl = useRef<Mesh>(null);\n  const { nodes } = useLoader<GLTFResult>(GLTFLoader, './models/david_head-fragments.gltf')\n  const { mouse } = useThree()\n  const headRef = useRef<Group>(null)\n  const particles = nodes.Head.children.map(() => createRef<Mesh>())\n  const customMaterialRef = useRef<any>(null)\n  const [isAnimated, setIsAnimated] = useState<boolean>(false)\n  const initialPositions = useRef<any>(nodes.Head.children.map((el) => el.position))\n\n  const mousemoveHandler = useCallback(() => {\n    const rotateY = mouse.x * 1000;\n    const rotateX = -mouse.y * 1000;\n\n    if (modelEl.current) {\n      gsap.to(modelEl.current.rotation, {\n        x: 0.0003 * rotateX,\n        y: 0.0003 * rotateY,\n        duration: 0.5\n      })\n    }\n  }, [mouse.x, mouse.y])\n\n  useEffect(() => {\n    window.addEventListener('mousemove', mousemoveHandler);\n\n    return () => {\n      window.removeEventListener('mousemove', mousemoveHandler);\n    };\n  }, [mousemoveHandler])\n\n  useEffect(() => {\n    particles.map((el, index) => {\n      if (el.current) gsap.to(el.current.position, {\n        x: isAnimated ? el.current.position.x * 4 : initialPositions.current[index].x,\n        y: isAnimated ? el.current.position.y * 4 : initialPositions.current[index].y,\n        z: isAnimated ? el.current.position.z * 4 : initialPositions.current[index].z,\n        duration: 1.5, ease: 'power2.inOut'\n      })\n    })\n\n    if (headRef.current) {\n      if(headRef.current) gsap.to(headRef.current.rotation, { x: isAnimated ? 1.2 : 0, duration: 1.5, ease: 'power2.inOut' })\n    }\n  }, [isAnimated, particles])\n\n  return (\n    <group ref={modelEl}\n      onClick={(e) => {\n        e.stopPropagation()\n        setIsAnimated(!isAnimated)\n      }}\n    >\n      <group position={[0, 0, 0]} rotation={[0, -1.6, 0]} ref={headRef}>\n        {nodes.Head.children.map((el, index) => (\n          <mesh\n            key={index}\n            receiveShadow\n            castShadow\n            position={el.position}\n            ref={particles[index]}\n            material={el.material}\n          >\n            <bufferGeometry attach=\"geometry\" {...el.geometry} />\n            {/* <customMaterial attach=\"material\" ref={customMaterialRef} /> */}\n            {/* <meshStandardMaterial attach=\"material\" /> */}\n          </mesh>\n        ))}\n      </group>\n    </group>\n  );\n};\n\nexport default Head;\n","/Users/bart/Codes/three-fiber/src/components/Box/Box.tsx",[],"/Users/bart/Codes/three-fiber/src/theme/Theme.tsx",[],"/Users/bart/Codes/three-fiber/src/components/Head/index.ts",[],"/Users/bart/Codes/three-fiber/src/theme/createBreakpoints.ts",[],"/Users/bart/Codes/three-fiber/src/components/Lights/index.ts",[],"/Users/bart/Codes/three-fiber/src/components/Lights/Lights.tsx",[],"/Users/bart/Codes/three-fiber/src/components/Head/CustomMaterial.ts",[],["60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":45,"nodeType":"71","messageId":"72","endLine":4,"endColumn":53},{"ruleId":"69","severity":1,"message":"73","line":27,"column":9,"nodeType":"71","messageId":"72","endLine":27,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":53,"column":31,"nodeType":"76","messageId":"77","endLine":53,"endColumn":33},{"ruleId":"63","replacedBy":"78"},{"ruleId":"65","replacedBy":"79"},{"ruleId":"67","replacedBy":"80"},"jsx-a11y/accessible-emoji",[],"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"@typescript-eslint/no-unused-vars","'Material' is defined but never used.","Identifier","unusedVar","'customMaterialRef' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",[],["81"],["82"],"no-global-assign","no-unsafe-negation"]